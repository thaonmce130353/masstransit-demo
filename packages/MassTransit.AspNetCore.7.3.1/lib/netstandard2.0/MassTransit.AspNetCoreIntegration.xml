<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MassTransit.AspNetCoreIntegration</name>
    </assembly>
    <members>
        <member name="T:MassTransit.HostedServiceConfigurationExtensions">
            <summary>
            These are the updated extensions compatible with the container registration code. They should be used, for real.
            </summary>
        </member>
        <member name="M:MassTransit.HostedServiceConfigurationExtensions.AddMassTransitHostedService(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the MassTransit <see cref="T:Microsoft.Extensions.Hosting.IHostedService" />, which includes a bus and endpoint health check.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:MassTransit.HostedServiceConfigurationExtensions.AddMassTransitHostedService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean)">
            <summary>
            Adds the MassTransit <see cref="T:Microsoft.Extensions.Hosting.IHostedService" />, which includes a bus and endpoint health check.
            </summary>
            <param name="services"></param>
            <param name="waitUntilStarted">Await until bus fully started. (It will block application until bus becomes ready)</param>
        </member>
        <member name="M:MassTransit.HostedServiceConfigurationExtensions.AddMassTransitHostedService(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Boolean,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Adds the MassTransit <see cref="T:Microsoft.Extensions.Hosting.IHostedService" />, which includes a bus and endpoint health check.
            Use it together with UseHealthCheck to get more detailed diagnostics.
            </summary>
            <param name="services"></param>
            <param name="waitUntilStarted">Await until bus fully started. (It will block application until bus becomes ready)</param>
            <param name="startTimeout">
            The timeout for starting the bus. The bus start process will not respond to the hosted service's cancellation token.
            In other words, if host shutdown is triggered during bus startup, the startup will still complete (subject to the specified timeout).
            </param>
            <param name="stopTimeout">
            The timeout for stopping the bus. The bus stop process will not respond to the hosted service's cancellation token.
            In other words, bus shutdown will complete gracefully (subject to the specified timeout) even if instructed by ASP.NET Core
            to no longer be graceful.
            </param>
        </member>
    </members>
</doc>
